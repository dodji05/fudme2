<?php

namespace AdminBundle\Repository;

/**
 * DonsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DonsRepository extends \Doctrine\ORM\EntityRepository
{
    public function dixDerniersDons($porteur){
        $qb = $this->createQueryBuilder('d')
        ->leftJoin('d.projet','p')
        ->where('p.porteur = :porteur')
        ->orderBy('d.dateDons','DESC')
        ->setParameter('porteur',$porteur);
        return $qb->getQuery()->setMaxResults(10)
            ->getResult();
    }
    public function septDerniersDonsMotant($porteur){
        $qb = $this->createQueryBuilder('d')
            ->select('SUM(d.montant)')
            ->leftJoin('d.projet','p')
            ->where('p.porteur = :porteur')
            ->andWhere('DATE_DIFF(d.dateDons, CURRENT_DATE()) <= 7')
            ->setParameter('porteur',$porteur);
        try {
            return (int)$qb
                ->getQuery()
                ->getSingleScalarResult();
        } catch (NoResultException $e) {
        } catch (NonUniqueResultException $e) {
        }
    }
   public function projetsFinances($donateur){
       $qb = $this->createQueryBuilder('d')

           ->innerJoin('d.projet','p')
           ->innerJoin('d.donateur','dn')
           ->where('d.donateur = :donateur')
           ->groupBy('d.donateur')

           ->setParameter('donateur',$donateur)
           //->select('SUM(d.montant) as total, p')
       ;
       return $qb->getQuery()->getResult();

   }
}
